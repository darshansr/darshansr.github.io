{"version":3,"sources":["src/app/products/components/product-edit/product-edit.component.html","src/app/products/components/product-list/product-list.component.html","src/app/products/containers/product-shell/product-shell.component.html","src/app/products/components/product-edit/product-edit.component.css","src/app/products/components/product-edit/product-edit.component.ts","src/app/products/components/product-list/product-list.component.css","src/app/products/components/product-list/product-list.component.ts","src/app/products/containers/product-shell/product-shell.component.ts","src/app/products/product.module.ts","src/app/products/product.service.ts","src/app/products/state/index.ts","src/app/products/state/product.actions.ts","src/app/products/state/product.effects.ts","src/app/products/state/product.reducer.ts","src/app/shared/generic-validator.ts","src/app/shared/number.validator.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"card\\\" *ngIf=\\\"product\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    {{pageTitle}}\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form novalidate (ngSubmit)=\\\"saveProduct()\\\" [formGroup]=\\\"productForm\\\">\\r\\n      <fieldset>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"productNameId\\\">Product Name</label>\\r\\n\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <input [ngClass]=\\\"{'is-invalid': displayMessage.productName }\\\" \\r\\n                   class=\\\"form-control\\\" \\r\\n                   id=\\\"productNameId\\\" \\r\\n                   type=\\\"text\\\" \\r\\n                   placeholder=\\\"Name (required)\\\" \\r\\n                   formControlName=\\\"productName\\\" \\r\\n                   (blur)=\\\"blur()\\\" />\\r\\n            <span class=\\\"invalid-feedback\\\" *ngIf=\\\"displayMessage.productName\\\">\\r\\n              {{displayMessage.productName}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"productCodeId\\\">Product Code</label>\\r\\n\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <input [ngClass]=\\\"{'is-invalid': displayMessage.productCode}\\\" \\r\\n                   class=\\\"form-control\\\"\\r\\n                   id=\\\"productCodeId\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   placeholder=\\\"Code (required)\\\"\\r\\n                   formControlName=\\\"productCode\\\"\\r\\n                   (blur)=\\\"blur()\\\" />\\r\\n            <span class=\\\"invalid-feedback\\\" *ngIf=\\\"displayMessage.productCode\\\">\\r\\n              {{displayMessage.productCode}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"starRatingId\\\">Star Rating (1-5)</label>\\r\\n\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <input [ngClass]=\\\"{'is-invalid': displayMessage.starRating}\\\"\\r\\n                   class=\\\"form-control\\\" \\r\\n                   id=\\\"starRatingId\\\" \\r\\n                   type=\\\"text\\\" \\r\\n                   placeholder=\\\"Rating\\\" \\r\\n                   formControlName=\\\"starRating\\\" />\\r\\n            <span class=\\\"invalid-feedback\\\" *ngIf=\\\"displayMessage.starRating\\\">\\r\\n              {{displayMessage.starRating}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"descriptionId\\\">Description</label>\\r\\n\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <textarea [ngClass]=\\\"{'is-invalid': displayMessage.description}\\\"\\r\\n                      class=\\\"form-control\\\" \\r\\n                      id=\\\"descriptionId\\\" \\r\\n                      placeholder=\\\"Description\\\" \\r\\n                      rows=3 \\r\\n                      formControlName=\\\"description\\\">\\r\\n            </textarea>\\r\\n            <span class=\\\"invalid-feedback\\\" *ngIf=\\\"displayMessage.description\\\">\\r\\n              {{ displayMessage.description}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-md-10 col-md-offset-2\\\">\\r\\n            <span>\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style=\\\"width:80px;margin-right:10px\\\" [disabled]=\\\"!productForm.valid || !productForm.dirty\\\">\\r\\n                Save\\r\\n              </button>\\r\\n            </span>\\r\\n            <span>\\r\\n              <button class=\\\"btn btn-light\\\" type=\\\"button\\\" style=\\\"width:80px;margin-right:10px\\\" (click)=\\\"cancelEdit()\\\">\\r\\n                Cancel\\r\\n              </button>\\r\\n            </span>\\r\\n            <span>\\r\\n              <button class=\\\"btn btn-light\\\" type=\\\"button\\\" style=\\\"width:80px\\\" (click)=\\\"deleteProduct()\\\">\\r\\n                Delete\\r\\n              </button>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\r\\n  Error: {{ errorMessage }}\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card\\\">\\r\\n\\r\\n  <div class=\\\"card-header\\\">\\r\\n    {{pageTitle}}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-body\\\" *ngIf=\\\"products\\\">\\r\\n    <div class=\\\"list-group\\\">\\r\\n      <button class=\\\"list-group-item list-group-item-action rounded-0\\\"\\r\\n          *ngFor=\\\"let product of products\\\"\\r\\n          [ngClass]=\\\"{'active': product?.id === selectedProduct?.id}\\\"\\r\\n          (click)=\\\"productSelected(product)\\\">{{ product.productName }}\\r\\n        <ng-container *ngIf=\\\"displayCode\\\">\\r\\n          ({{ product.productCode }})\\r\\n        </ng-container>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-check col-md-7\\\">\\r\\n        <label>\\r\\n          <input class=\\\"form-check-input\\\"\\r\\n                 type=\\\"checkbox\\\"\\r\\n                 (change)=\\\"checkChanged($event.target.checked)\\\"\\r\\n                 [checked]=\\\"displayCode\\\">\\r\\n          Display Product Code\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"newProduct()\\\">\\r\\n          Add\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\r\\n  Error: {{ errorMessage }}\\r\\n</div>\\r\\n\"","export default \"<div class='row'>\\r\\n  <div class='col-md-4'>\\r\\n    <pm-product-list\\r\\n    [displayCode]=\\\"displayCode$ | async\\\"\\r\\n    [products]=\\\"products$ | async\\\"\\r\\n    [selectedProduct]=\\\"selectedProduct$ | async\\\"\\r\\n\\t  [errorMessage]=\\\"errorMessage$ | async\\\"\\r\\n    (checked)=\\\"checkChanged($event)\\\"\\r\\n    (initializeNewProduct)=\\\"(newProduct())\\\"\\r\\n    (selected)=\\\"productSelected($event)\\\"></pm-product-list>\\r\\n  </div>\\r\\n  <div class='col-md-8'>\\r\\n    <pm-product-edit\\r\\n    [selectedProduct]=\\\"selectedProduct$ | async\\\"\\r\\n\\t  [errorMessage]=\\\"errorMessage$ | async\\\"\\r\\n    (clearCurrent)=\\\"clearProduct()\\\"\\r\\n    (update)=\\\"updateProduct($event)\\\"\\r\\n    (delete)=\\\"deleteProduct($event)\\\"\\r\\n    (create)=\\\"saveProduct($event)\\\"></pm-product-edit>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2NvbXBvbmVudHMvcHJvZHVjdC1lZGl0L3Byb2R1Y3QtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Product } from '../../product';\r\nimport { GenericValidator } from '../../../shared/generic-validator';\r\nimport { NumberValidators } from '../../../shared/number.validator';\r\n\r\n@Component({\r\n  selector: 'pm-product-edit',\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.css']\r\n})\r\nexport class ProductEditComponent implements OnInit, OnChanges, OnDestroy {\r\n  pageTitle = 'Product Edit';\r\n  @Input() errorMessage: string;\r\n  @Input() selectedProduct: Product;\r\n  @Output() create = new EventEmitter<Product>();\r\n  @Output() update = new EventEmitter<Product>();\r\n  @Output() delete = new EventEmitter<Product>();\r\n  @Output() clearCurrent = new EventEmitter<void>();\r\n\r\n  componentActive = true;\r\n  productForm: FormGroup;\r\n\r\n  product: Product | null;\r\n\r\n  // Use with the generic validation message class\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    // Defines all of the validation messages for the form.\r\n    // These could instead be retrieved from a file or database.\r\n    this.validationMessages = {\r\n      productName: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name must be at least three characters.',\r\n        maxlength: 'Product name cannot exceed 50 characters.'\r\n      },\r\n      productCode: {\r\n        required: 'Product code is required.'\r\n      },\r\n      starRating: {\r\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n      }\r\n    };\r\n\r\n    // Define an instance of the validator for use with this form,\r\n    // passing in this form's set of validation messages.\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Define the form group\r\n    this.productForm = this.fb.group({\r\n      productName: ['', [Validators.required,\r\n                         Validators.minLength(3),\r\n                         Validators.maxLength(50)]],\r\n      productCode: ['', Validators.required],\r\n      starRating: ['', NumberValidators.range(1, 5)],\r\n      description: ''\r\n    });\r\n\r\n    // Watch for value changes\r\n    this.productForm.valueChanges.subscribe(\r\n      value => this.displayMessage = this.genericValidator.processMessages(this.productForm)\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    // patch form with value from the store\r\n    if (changes.selectedProduct) {\r\n      const product: any = changes.selectedProduct.currentValue as Product;\r\n      this.displayProduct(product);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.componentActive = false;\r\n  }\r\n\r\n  // Also validate on blur\r\n  // Helpful if the user tabs through required fields\r\n  blur(): void {\r\n    this.displayMessage = this.genericValidator.processMessages(this.productForm);\r\n  }\r\n\r\n  displayProduct(product: Product | null): void {\r\n    // Set the local product property\r\n    this.product = product;\r\n\r\n    if (this.product && this.productForm) {\r\n      // Reset the form back to pristine\r\n      this.productForm.reset();\r\n\r\n      // Display the appropriate page title\r\n      if (this.product.id === 0) {\r\n        this.pageTitle = 'Add Product';\r\n      } else {\r\n        this.pageTitle = `Edit Product: ${this.product.productName}`;\r\n      }\r\n\r\n      // Update the data on the form\r\n      this.productForm.patchValue({\r\n        productName: this.product.productName,\r\n        productCode: this.product.productCode,\r\n        starRating: this.product.starRating,\r\n        description: this.product.description\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelEdit(): void {\r\n    // Redisplay the currently selected product\r\n    // replacing any edits made\r\n    this.displayProduct(this.product);\r\n  }\r\n\r\n  deleteProduct(): void {\r\n    if (this.product && this.product.id) {\r\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\r\n        this.delete.emit(this.product);\r\n      }\r\n    } else {\r\n      // No need to delete, it was never saved\r\n      this.clearCurrent.emit();\r\n    }\r\n  }\r\n\r\n  saveProduct(): void {\r\n    if (this.productForm.valid) {\r\n      if (this.productForm.dirty) {\r\n        // Copy over all of the original product properties\r\n        // Then copy over the values from the form\r\n        // This ensures values not on the form, such as the Id, are retained\r\n        const p = { ...this.product, ...this.productForm.value };\r\n\r\n        if (p.id === 0) {\r\n          this.create.emit(p);\r\n        } else {\r\n          this.update.emit(p);\r\n        }\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Please correct the validation errors.';\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".card-body {\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdHMvY29tcG9uZW50cy9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9jb21wb25lbnRzL3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHkge1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuIl19 */\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Product } from '../../product';\r\n\r\n@Component({\r\n  selector: 'pm-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent {\r\n  pageTitle = 'Products';\r\n\r\n  @Input() errorMessage: string;\r\n  @Input() products: Product[];\r\n  @Input() displayCode: boolean;\r\n  @Input() selectedProduct: Product;\r\n  @Output() checked = new EventEmitter<boolean>();\r\n  @Output() initializeNewProduct = new EventEmitter<void>();\r\n  @Output() selected = new EventEmitter<Product>();\r\n\r\n  checkChanged(value: boolean): void {\r\n    this.checked.emit(value);\r\n  }\r\n\r\n  newProduct(): void {\r\n    this.initializeNewProduct.emit();\r\n  }\r\n\r\n  productSelected(product: Product): void {\r\n    this.selected.emit(product);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport * as fromProduct from './../../state';\r\nimport * as productActions from './../../state/product.actions';\r\nimport { Product } from '../../product';\r\n\r\n@Component({\r\n  templateUrl: './product-shell.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProductShellComponent implements OnInit {\r\n  displayCode$: Observable<boolean>;\r\n  selectedProduct$: Observable<Product>;\r\n  products$: Observable<Product[]>;\r\n  errorMessage$: Observable<string>;\r\n\r\n  constructor(private store: Store<fromProduct.State>) {}\r\n\r\n  ngOnInit(): void {\r\n    this.store.dispatch(new productActions.Load());\r\n    this.products$ = this.store.pipe(select(fromProduct.getProducts));\r\n    this.errorMessage$ = this.store.pipe(select(fromProduct.getError));\r\n    this.selectedProduct$ = this.store.pipe(select(fromProduct.getCurrentProduct));\r\n    this.displayCode$ = this.store.pipe(select(fromProduct.getShowProductCode));\r\n  }\r\n\r\n  checkChanged(value: boolean): void {\r\n    this.store.dispatch(new productActions.ToggleProductCode(value));\r\n  }\r\n\r\n  newProduct(): void {\r\n    this.store.dispatch(new productActions.InitializeCurrentProduct());\r\n  }\r\n\r\n  productSelected(product: Product): void {\r\n    this.store.dispatch(new productActions.SetCurrentProduct(product));\r\n  }\r\n\r\n  deleteProduct(product: Product): void {\r\n    this.store.dispatch(new productActions.DeleteProduct(product.id));\r\n  }\r\n\r\n  clearProduct(): void {\r\n    this.store.dispatch(new productActions.ClearCurrentProduct());\r\n  }\r\n  saveProduct(product: Product): void {\r\n    this.store.dispatch(new productActions.CreateProduct(product));\r\n  }\r\n\r\n  updateProduct(product: Product): void {\r\n    this.store.dispatch(new productActions.UpdateProduct(product));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { ProductShellComponent } from './containers/product-shell/product-shell.component';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\n\r\n/* NgRx */\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { reducer } from './state/product.reducer';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { ProductEffects } from './state/product.effects';\r\n\r\nconst productRoutes: Routes = [\r\n  { path: '', component: ProductShellComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(productRoutes),\r\n    StoreModule.forFeature('products', reducer),\r\n    EffectsModule.forFeature(\r\n      [ ProductEffects ]\r\n    ),\r\n  ],\r\n  declarations: [\r\n    ProductShellComponent,\r\n    ProductListComponent,\r\n    ProductEditComponent\r\n  ]\r\n})\r\nexport class ProductModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductService {\r\n  private productsUrl = 'api/products';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.productsUrl)\r\n      .pipe(\r\n        tap(data => console.log(JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createProduct(product: Product): Observable<Product> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    // Product Id must be null for the Web API to assign an Id\r\n    const newProduct = { ...product, id: null };\r\n    return this.http.post<Product>(this.productsUrl, newProduct, { headers })\r\n      .pipe(\r\n        tap(data => console.log('createProduct: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteProduct(id: number): Observable<{}> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    const url = `${this.productsUrl}/${id}`;\r\n    return this.http.delete<Product>(url, { headers })\r\n      .pipe(\r\n        tap(data => console.log('deleteProduct: ' + id)),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateProduct(product: Product): Observable<Product> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    const url = `${this.productsUrl}/${product.id}`;\r\n    return this.http.put<Product>(url, product, { headers })\r\n      .pipe(\r\n        tap(() => console.log('updateProduct: ' + product.id)),\r\n        // Return the product on an update\r\n        map(() => product),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(err) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage: string;\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n    }\r\n    console.error(err);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n}\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromRoot from '../../state/app.state';\r\nimport * as fromProducts from './product.reducer';\r\n\r\n// Extends the app state to include the product feature.\r\n// This is required because products are lazy loaded.\r\n// So the reference to ProductState cannot be added to app.state.ts directly.\r\nexport interface State extends fromRoot.State {\r\n    products: fromProducts.ProductState;\r\n}\r\n\r\n// Selector functions\r\nconst getProductFeatureState = createFeatureSelector<fromProducts.ProductState>('products');\r\n\r\nexport const getShowProductCode = createSelector(\r\n    getProductFeatureState,\r\n    state => state.showProductCode\r\n);\r\n\r\nexport const getCurrentProductId = createSelector(\r\n    getProductFeatureState,\r\n    state => state.currentProductId\r\n);\r\n\r\nexport const getCurrentProduct = createSelector(\r\n    getProductFeatureState,\r\n    getCurrentProductId,\r\n    (state, currentProductId) => {\r\n        if (currentProductId === 0) {\r\n            return {\r\n                id: 0,\r\n                productName: '',\r\n                productCode: 'New',\r\n                description: '',\r\n                starRating: 0\r\n            };\r\n        } else {\r\n            return currentProductId ? state.products.find(p => p.id === currentProductId) : null;\r\n        }\r\n    }\r\n);\r\n\r\nexport const getProducts = createSelector(\r\n    getProductFeatureState,\r\n    state => state.products\r\n);\r\n\r\nexport const getError = createSelector(\r\n    getProductFeatureState,\r\n    state => state.error\r\n);\r\n","import { Product } from '../product';\r\n\r\n/* NgRx */\r\nimport { Action } from '@ngrx/store';\r\n\r\nexport enum ProductActionTypes {\r\n  ToggleProductCode = '[Product] Toggle Product Code',\r\n  SetCurrentProduct = '[Product] Set Current Product',\r\n  ClearCurrentProduct = '[Product] Clear Current Product',\r\n  InitializeCurrentProduct = '[Product] Initialize Current Product',\r\n  Load = '[Product] Load',\r\n  LoadSuccess = '[Product] Load Success',\r\n  LoadFail = '[Product] Load Fail',\r\n  UpdateProduct = '[Product] Update Product',\r\n  UpdateProductSuccess = '[Product] Update Product Success',\r\n  UpdateProductFail = '[Product] Update Product Fail',\r\n  CreateProduct = '[Product] Create Product',\r\n  CreateProductSuccess = '[Product] Create Product Success',\r\n  CreateProductFail = '[Product] Create Product Fail',\r\n  DeleteProduct = '[Product] Delete Product',\r\n  DeleteProductSuccess = '[Product] Delete Product Success',\r\n  DeleteProductFail = '[Product] Delete Product Fail'\r\n}\r\n\r\n// Action Creators\r\nexport class ToggleProductCode implements Action {\r\n  readonly type = ProductActionTypes.ToggleProductCode;\r\n\r\n  constructor(public payload: boolean) { }\r\n}\r\n\r\nexport class SetCurrentProduct implements Action {\r\n  readonly type = ProductActionTypes.SetCurrentProduct;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class ClearCurrentProduct implements Action {\r\n  readonly type = ProductActionTypes.ClearCurrentProduct;\r\n}\r\n\r\nexport class InitializeCurrentProduct implements Action {\r\n  readonly type = ProductActionTypes.InitializeCurrentProduct;\r\n}\r\n\r\nexport class Load implements Action {\r\n  readonly type = ProductActionTypes.Load;\r\n}\r\n\r\nexport class LoadSuccess implements Action {\r\n  readonly type = ProductActionTypes.LoadSuccess;\r\n\r\n  constructor(public payload: Product[]) { }\r\n}\r\n\r\nexport class LoadFail implements Action {\r\n  readonly type = ProductActionTypes.LoadFail;\r\n\r\n  constructor(public payload: string) { }\r\n}\r\n\r\nexport class UpdateProduct implements Action {\r\n  readonly type = ProductActionTypes.UpdateProduct;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class UpdateProductSuccess implements Action {\r\n  readonly type = ProductActionTypes.UpdateProductSuccess;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class UpdateProductFail implements Action {\r\n  readonly type = ProductActionTypes.UpdateProductFail;\r\n\r\n  constructor(public payload: string) { }\r\n}\r\n\r\nexport class CreateProduct implements Action {\r\n  readonly type = ProductActionTypes.CreateProduct;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class CreateProductSuccess implements Action {\r\n  readonly type = ProductActionTypes.CreateProductSuccess;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class CreateProductFail implements Action {\r\n  readonly type = ProductActionTypes.CreateProductFail;\r\n\r\n  constructor(public payload: string) { }\r\n}\r\n\r\nexport class DeleteProduct implements Action {\r\n  readonly type = ProductActionTypes.DeleteProduct;\r\n\r\n  constructor(public payload: number) { }\r\n}\r\n\r\nexport class DeleteProductSuccess implements Action {\r\n  readonly type = ProductActionTypes.DeleteProductSuccess;\r\n\r\n  constructor(public payload: number) { }\r\n}\r\n\r\nexport class DeleteProductFail implements Action {\r\n  readonly type = ProductActionTypes.DeleteProductFail;\r\n\r\n  constructor(public payload: string) { }\r\n}\r\n\r\n// Union the valid types\r\nexport type ProductActions = ToggleProductCode\r\n  | SetCurrentProduct\r\n  | ClearCurrentProduct\r\n  | InitializeCurrentProduct\r\n  | Load\r\n  | LoadSuccess\r\n  | LoadFail\r\n  | UpdateProduct\r\n  | UpdateProductSuccess\r\n  | UpdateProductFail\r\n  | CreateProduct\r\n  | CreateProductSuccess\r\n  | CreateProductFail\r\n  | DeleteProduct\r\n  | DeleteProductSuccess\r\n  | DeleteProductFail;\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap, map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProductService } from '../product.service';\r\nimport { Product } from '../product';\r\n\r\n/* NgRx */\r\nimport { Action } from '@ngrx/store';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport * as productActions from './product.actions';\r\n\r\n@Injectable()\r\nexport class ProductEffects {\r\n\r\n  constructor(private productService: ProductService,\r\n              private actions$: Actions) { }\r\n\r\n  @Effect()\r\n  loadProducts$: Observable<Action> = this.actions$.pipe(\r\n    ofType(productActions.ProductActionTypes.Load),\r\n    mergeMap(action =>\r\n      this.productService.getProducts().pipe(\r\n        map(products => (new productActions.LoadSuccess(products))),\r\n        catchError(err => of(new productActions.LoadFail(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  updateProduct$: Observable<Action> = this.actions$.pipe(\r\n    ofType(productActions.ProductActionTypes.UpdateProduct),\r\n    map((action: productActions.UpdateProduct) => action.payload),\r\n    mergeMap((product: Product) =>\r\n      this.productService.updateProduct(product).pipe(\r\n        map(updatedProduct => (new productActions.UpdateProductSuccess(updatedProduct))),\r\n        catchError(err => of(new productActions.UpdateProductFail(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createProduct$: Observable<Action> = this.actions$.pipe(\r\n    ofType(productActions.ProductActionTypes.CreateProduct),\r\n    map((action: productActions.CreateProduct) => action.payload),\r\n    mergeMap((product: Product) =>\r\n      this.productService.createProduct(product).pipe(\r\n        map(newProduct => (new productActions.CreateProductSuccess(newProduct))),\r\n        catchError(err => of(new productActions.CreateProductFail(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  deleteProduct$: Observable<Action> = this.actions$.pipe(\r\n    ofType(productActions.ProductActionTypes.DeleteProduct),\r\n    map((action: productActions.DeleteProduct) => action.payload),\r\n    mergeMap((productId: number) =>\r\n      this.productService.deleteProduct(productId).pipe(\r\n        map(() => (new productActions.DeleteProductSuccess(productId))),\r\n        catchError(err => of(new productActions.DeleteProductFail(err)))\r\n      )\r\n    )\r\n  );\r\n}\r\n","import { Product } from '../product';\r\nimport { ProductActionTypes, ProductActions } from './product.actions';\r\n\r\n// State for this feature (Product)\r\nexport interface ProductState {\r\n  showProductCode: boolean;\r\n  currentProductId: number | null;\r\n  products: Product[];\r\n  error: string;\r\n}\r\n\r\nconst initialState: ProductState = {\r\n  showProductCode: true,\r\n  currentProductId: null,\r\n  products: [],\r\n  error: ''\r\n};\r\n\r\nexport function reducer(state = initialState, action: ProductActions): ProductState {\r\n\r\n  switch (action.type) {\r\n    case ProductActionTypes.ToggleProductCode:\r\n      return {\r\n        ...state,\r\n        showProductCode: action.payload\r\n      };\r\n\r\n    case ProductActionTypes.SetCurrentProduct:\r\n      return {\r\n        ...state,\r\n        currentProductId: action.payload.id\r\n      };\r\n\r\n    case ProductActionTypes.ClearCurrentProduct:\r\n      return {\r\n        ...state,\r\n        currentProductId: null\r\n      };\r\n\r\n    case ProductActionTypes.InitializeCurrentProduct:\r\n      return {\r\n        ...state,\r\n        currentProductId: 0\r\n      };\r\n\r\n    case ProductActionTypes.LoadSuccess:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n        error: ''\r\n      };\r\n\r\n    case ProductActionTypes.LoadFail:\r\n      return {\r\n        ...state,\r\n        products: [],\r\n        error: action.payload\r\n      };\r\n\r\n    case ProductActionTypes.UpdateProductSuccess:\r\n      const updatedProducts = state.products.map(\r\n        item => action.payload.id === item.id ? action.payload : item);\r\n      return {\r\n        ...state,\r\n        products: updatedProducts,\r\n        currentProductId: action.payload.id,\r\n        error: ''\r\n      };\r\n\r\n    case ProductActionTypes.UpdateProductFail:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    // After a create, the currentProduct is the new product.\r\n    case ProductActionTypes.CreateProductSuccess:\r\n      return {\r\n        ...state,\r\n        products: [...state.products, action.payload],\r\n        currentProductId: action.payload.id,\r\n        error: ''\r\n      };\r\n\r\n    case ProductActionTypes.CreateProductFail:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    // After a delete, the currentProduct is null.\r\n    case ProductActionTypes.DeleteProductSuccess:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(product => product.id !== action.payload),\r\n        currentProductId: null,\r\n        error: ''\r\n      };\r\n\r\n    case ProductActionTypes.DeleteProductFail:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// Generic validator for Reactive forms\r\n// Implemented as a class, not a service, so it can retain state for multiple forms.\r\nexport class GenericValidator {\r\n\r\n  // Provide the set of valid validation messages\r\n  // Stucture:\r\n  // controlName1: {\r\n  //     validationRuleName1: 'Validation Message.',\r\n  //     validationRuleName2: 'Validation Message.'\r\n  // },\r\n  // controlName2: {\r\n  //     validationRuleName1: 'Validation Message.',\r\n  //     validationRuleName2: 'Validation Message.'\r\n  // }\r\n  constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\r\n\r\n  }\r\n\r\n  // Processes each control within a FormGroup\r\n  // And returns a set of validation messages to display\r\n  // Structure\r\n  // controlName1: 'Validation Message.',\r\n  // controlName2: 'Validation Message.'\r\n  processMessages(container: FormGroup): { [key: string]: string } {\r\n    const messages = {};\r\n    for (const controlKey in container.controls) {\r\n      if (container.controls.hasOwnProperty(controlKey)) {\r\n        const c = container.controls[controlKey];\r\n        // If it is a FormGroup, process its child controls.\r\n        if (c instanceof FormGroup) {\r\n          const childMessages = this.processMessages(c);\r\n          Object.assign(messages, childMessages);\r\n        } else {\r\n          // Only validate if there are validation messages for the control\r\n          if (this.validationMessages[controlKey]) {\r\n            messages[controlKey] = '';\r\n            if ((c.dirty || c.touched) && c.errors) {\r\n              Object.keys(c.errors).map(messageKey => {\r\n                if (this.validationMessages[controlKey][messageKey]) {\r\n                  messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return messages;\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport class NumberValidators {\r\n\r\n    static range(min: number, max: number): ValidatorFn {\r\n        return (c: AbstractControl): { [key: string]: boolean } | null => {\r\n            if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\r\n                return { range: true };\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}