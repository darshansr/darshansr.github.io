{"version":3,"sources":["./src/app/products/components/product-edit/product-edit.component.html","./src/app/products/components/product-list/product-list.component.html","./src/app/products/containers/product-shell/product-shell.component.html","./src/app/products/components/product-edit/product-edit.component.css","./src/app/products/components/product-edit/product-edit.component.ts","./src/app/products/components/product-list/product-list.component.css","./src/app/products/components/product-list/product-list.component.ts","./src/app/products/containers/product-shell/product-shell.component.ts","./src/app/products/product.module.ts","./src/app/products/product.service.ts","./src/app/products/state/index.ts","./src/app/products/state/product.actions.ts","./src/app/products/state/product.effects.ts","./src/app/products/state/product.reducer.ts","./src/app/shared/generic-validator.ts","./src/app/shared/number.validator.ts"],"names":[],"mappings":"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","file":"products-product-module-es2015.js","sourcesContent":["export default \"<div class=\\\"card\\\" *ngIf=\\\"product\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    {{pageTitle}}\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form novalidate (ngSubmit)=\\\"saveProduct()\\\" [formGroup]=\\\"productForm\\\">\\r\\n      <fieldset>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"productNameId\\\">Product Name</label>\\r\\n\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <input [ngClass]=\\\"{'is-invalid': displayMessage.productName }\\\" \\r\\n                   class=\\\"form-control\\\" \\r\\n                   id=\\\"productNameId\\\" \\r\\n                   type=\\\"text\\\" \\r\\n                   placeholder=\\\"Name (required)\\\" \\r\\n                   formControlName=\\\"productName\\\" \\r\\n                   (blur)=\\\"blur()\\\" />\\r\\n            <span class=\\\"invalid-feedback\\\" *ngIf=\\\"displayMessage.productName\\\">\\r\\n              {{displayMessage.productName}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"productCodeId\\\">Product Code</label>\\r\\n\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <input [ngClass]=\\\"{'is-invalid': displayMessage.productCode}\\\" \\r\\n                   class=\\\"form-control\\\"\\r\\n                   id=\\\"productCodeId\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   placeholder=\\\"Code (required)\\\"\\r\\n                   formControlName=\\\"productCode\\\"\\r\\n                   (blur)=\\\"blur()\\\" />\\r\\n            <span class=\\\"invalid-feedback\\\" *ngIf=\\\"displayMessage.productCode\\\">\\r\\n              {{displayMessage.productCode}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"starRatingId\\\">Star Rating (1-5)</label>\\r\\n\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <input [ngClass]=\\\"{'is-invalid': displayMessage.starRating}\\\"\\r\\n                   class=\\\"form-control\\\" \\r\\n                   id=\\\"starRatingId\\\" \\r\\n                   type=\\\"text\\\" \\r\\n                   placeholder=\\\"Rating\\\" \\r\\n                   formControlName=\\\"starRating\\\" />\\r\\n            <span class=\\\"invalid-feedback\\\" *ngIf=\\\"displayMessage.starRating\\\">\\r\\n              {{displayMessage.starRating}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-3 col-form-label\\\" for=\\\"descriptionId\\\">Description</label>\\r\\n\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <textarea [ngClass]=\\\"{'is-invalid': displayMessage.description}\\\"\\r\\n                      class=\\\"form-control\\\" \\r\\n                      id=\\\"descriptionId\\\" \\r\\n                      placeholder=\\\"Description\\\" \\r\\n                      rows=3 \\r\\n                      formControlName=\\\"description\\\">\\r\\n            </textarea>\\r\\n            <span class=\\\"invalid-feedback\\\" *ngIf=\\\"displayMessage.description\\\">\\r\\n              {{ displayMessage.description}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-md-10 col-md-offset-2\\\">\\r\\n            <span>\\r\\n              <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" style=\\\"width:80px;margin-right:10px\\\" [disabled]=\\\"!productForm.valid || !productForm.dirty\\\">\\r\\n                Save\\r\\n              </button>\\r\\n            </span>\\r\\n            <span>\\r\\n              <button class=\\\"btn btn-light\\\" type=\\\"button\\\" style=\\\"width:80px;margin-right:10px\\\" (click)=\\\"cancelEdit()\\\">\\r\\n                Cancel\\r\\n              </button>\\r\\n            </span>\\r\\n            <span>\\r\\n              <button class=\\\"btn btn-light\\\" type=\\\"button\\\" style=\\\"width:80px\\\" (click)=\\\"deleteProduct()\\\">\\r\\n                Delete\\r\\n              </button>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\r\\n  Error: {{ errorMessage }}\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card\\\">\\r\\n\\r\\n  <div class=\\\"card-header\\\">\\r\\n    {{pageTitle}}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-body\\\" *ngIf=\\\"products\\\">\\r\\n    <div class=\\\"list-group\\\">\\r\\n      <button class=\\\"list-group-item list-group-item-action rounded-0\\\"\\r\\n          *ngFor=\\\"let product of products\\\"\\r\\n          [ngClass]=\\\"{'active': product?.id === selectedProduct?.id}\\\"\\r\\n          (click)=\\\"productSelected(product)\\\">{{ product.productName }}\\r\\n        <ng-container *ngIf=\\\"displayCode\\\">\\r\\n          ({{ product.productCode }})\\r\\n        </ng-container>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-check col-md-7\\\">\\r\\n        <label>\\r\\n          <input class=\\\"form-check-input\\\"\\r\\n                 type=\\\"checkbox\\\"\\r\\n                 (change)=\\\"checkChanged($event.target.checked)\\\"\\r\\n                 [checked]=\\\"displayCode\\\">\\r\\n          Display Product Code\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 text-right\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"newProduct()\\\">\\r\\n          Add\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\r\\n  Error: {{ errorMessage }}\\r\\n</div>\\r\\n\"","export default \"<div class='row'>\\r\\n  <div class='col-md-4'>\\r\\n    <pm-product-list\\r\\n    [displayCode]=\\\"displayCode$ | async\\\"\\r\\n    [products]=\\\"products$ | async\\\"\\r\\n    [selectedProduct]=\\\"selectedProduct$ | async\\\"\\r\\n\\t  [errorMessage]=\\\"errorMessage$ | async\\\"\\r\\n    (checked)=\\\"checkChanged($event)\\\"\\r\\n    (initializeNewProduct)=\\\"(newProduct())\\\"\\r\\n    (selected)=\\\"productSelected($event)\\\"></pm-product-list>\\r\\n  </div>\\r\\n  <div class='col-md-8'>\\r\\n    <pm-product-edit\\r\\n    [selectedProduct]=\\\"selectedProduct$ | async\\\"\\r\\n\\t  [errorMessage]=\\\"errorMessage$ | async\\\"\\r\\n    (clearCurrent)=\\\"clearProduct()\\\"\\r\\n    (update)=\\\"updateProduct($event)\\\"\\r\\n    (delete)=\\\"deleteProduct($event)\\\"\\r\\n    (create)=\\\"saveProduct($event)\\\"></pm-product-edit>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL2NvbXBvbmVudHMvcHJvZHVjdC1lZGl0L3Byb2R1Y3QtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  Input,\r\n  EventEmitter,\r\n  Output,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Product } from '../../product';\r\nimport { GenericValidator } from '../../../shared/generic-validator';\r\nimport { NumberValidators } from '../../../shared/number.validator';\r\n\r\n@Component({\r\n  selector: 'pm-product-edit',\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.css']\r\n})\r\nexport class ProductEditComponent implements OnInit, OnChanges, OnDestroy {\r\n  pageTitle = 'Product Edit';\r\n  @Input() errorMessage: string;\r\n  @Input() selectedProduct: Product;\r\n  @Output() create = new EventEmitter<Product>();\r\n  @Output() update = new EventEmitter<Product>();\r\n  @Output() delete = new EventEmitter<Product>();\r\n  @Output() clearCurrent = new EventEmitter<void>();\r\n\r\n  componentActive = true;\r\n  productForm: FormGroup;\r\n\r\n  product: Product | null;\r\n\r\n  // Use with the generic validation message class\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    // Defines all of the validation messages for the form.\r\n    // These could instead be retrieved from a file or database.\r\n    this.validationMessages = {\r\n      productName: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name must be at least three characters.',\r\n        maxlength: 'Product name cannot exceed 50 characters.'\r\n      },\r\n      productCode: {\r\n        required: 'Product code is required.'\r\n      },\r\n      starRating: {\r\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n      }\r\n    };\r\n\r\n    // Define an instance of the validator for use with this form,\r\n    // passing in this form's set of validation messages.\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Define the form group\r\n    this.productForm = this.fb.group({\r\n      productName: ['', [Validators.required,\r\n                         Validators.minLength(3),\r\n                         Validators.maxLength(50)]],\r\n      productCode: ['', Validators.required],\r\n      starRating: ['', NumberValidators.range(1, 5)],\r\n      description: ''\r\n    });\r\n\r\n    // Watch for value changes\r\n    this.productForm.valueChanges.subscribe(\r\n      value => this.displayMessage = this.genericValidator.processMessages(this.productForm)\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    // patch form with value from the store\r\n    if (changes.selectedProduct) {\r\n      const product: any = changes.selectedProduct.currentValue as Product;\r\n      this.displayProduct(product);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.componentActive = false;\r\n  }\r\n\r\n  // Also validate on blur\r\n  // Helpful if the user tabs through required fields\r\n  blur(): void {\r\n    this.displayMessage = this.genericValidator.processMessages(this.productForm);\r\n  }\r\n\r\n  displayProduct(product: Product | null): void {\r\n    // Set the local product property\r\n    this.product = product;\r\n\r\n    if (this.product && this.productForm) {\r\n      // Reset the form back to pristine\r\n      this.productForm.reset();\r\n\r\n      // Display the appropriate page title\r\n      if (this.product.id === 0) {\r\n        this.pageTitle = 'Add Product';\r\n      } else {\r\n        this.pageTitle = `Edit Product: ${this.product.productName}`;\r\n      }\r\n\r\n      // Update the data on the form\r\n      this.productForm.patchValue({\r\n        productName: this.product.productName,\r\n        productCode: this.product.productCode,\r\n        starRating: this.product.starRating,\r\n        description: this.product.description\r\n      });\r\n    }\r\n  }\r\n\r\n  cancelEdit(): void {\r\n    // Redisplay the currently selected product\r\n    // replacing any edits made\r\n    this.displayProduct(this.product);\r\n  }\r\n\r\n  deleteProduct(): void {\r\n    if (this.product && this.product.id) {\r\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\r\n        this.delete.emit(this.product);\r\n      }\r\n    } else {\r\n      // No need to delete, it was never saved\r\n      this.clearCurrent.emit();\r\n    }\r\n  }\r\n\r\n  saveProduct(): void {\r\n    if (this.productForm.valid) {\r\n      if (this.productForm.dirty) {\r\n        // Copy over all of the original product properties\r\n        // Then copy over the values from the form\r\n        // This ensures values not on the form, such as the Id, are retained\r\n        const p = { ...this.product, ...this.productForm.value };\r\n\r\n        if (p.id === 0) {\r\n          this.create.emit(p);\r\n        } else {\r\n          this.update.emit(p);\r\n        }\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Please correct the validation errors.';\r\n    }\r\n  }\r\n\r\n}\r\n","export default \".card-body {\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdHMvY29tcG9uZW50cy9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0FBQ1oiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0cy9jb21wb25lbnRzL3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWJvZHkge1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuIl19 */\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Product } from '../../product';\r\n\r\n@Component({\r\n  selector: 'pm-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent {\r\n  pageTitle = 'Products';\r\n\r\n  @Input() errorMessage: string;\r\n  @Input() products: Product[];\r\n  @Input() displayCode: boolean;\r\n  @Input() selectedProduct: Product;\r\n  @Output() checked = new EventEmitter<boolean>();\r\n  @Output() initializeNewProduct = new EventEmitter<void>();\r\n  @Output() selected = new EventEmitter<Product>();\r\n\r\n  checkChanged(value: boolean): void {\r\n    this.checked.emit(value);\r\n  }\r\n\r\n  newProduct(): void {\r\n    this.initializeNewProduct.emit();\r\n  }\r\n\r\n  productSelected(product: Product): void {\r\n    this.selected.emit(product);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport * as fromProduct from './../../state';\r\nimport * as productActions from './../../state/product.actions';\r\nimport { Product } from '../../product';\r\n\r\n@Component({\r\n  templateUrl: './product-shell.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProductShellComponent implements OnInit {\r\n  displayCode$: Observable<boolean>;\r\n  selectedProduct$: Observable<Product>;\r\n  products$: Observable<Product[]>;\r\n  errorMessage$: Observable<string>;\r\n\r\n  constructor(private store: Store<fromProduct.State>) {}\r\n\r\n  ngOnInit(): void {\r\n    this.store.dispatch(new productActions.Load());\r\n    this.products$ = this.store.pipe(select(fromProduct.getProducts));\r\n    this.errorMessage$ = this.store.pipe(select(fromProduct.getError));\r\n    this.selectedProduct$ = this.store.pipe(select(fromProduct.getCurrentProduct));\r\n    this.displayCode$ = this.store.pipe(select(fromProduct.getShowProductCode));\r\n  }\r\n\r\n  checkChanged(value: boolean): void {\r\n    this.store.dispatch(new productActions.ToggleProductCode(value));\r\n  }\r\n\r\n  newProduct(): void {\r\n    this.store.dispatch(new productActions.InitializeCurrentProduct());\r\n  }\r\n\r\n  productSelected(product: Product): void {\r\n    this.store.dispatch(new productActions.SetCurrentProduct(product));\r\n  }\r\n\r\n  deleteProduct(product: Product): void {\r\n    this.store.dispatch(new productActions.DeleteProduct(product.id));\r\n  }\r\n\r\n  clearProduct(): void {\r\n    this.store.dispatch(new productActions.ClearCurrentProduct());\r\n  }\r\n  saveProduct(product: Product): void {\r\n    this.store.dispatch(new productActions.CreateProduct(product));\r\n  }\r\n\r\n  updateProduct(product: Product): void {\r\n    this.store.dispatch(new productActions.UpdateProduct(product));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { ProductShellComponent } from './containers/product-shell/product-shell.component';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\r\n\r\n/* NgRx */\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { reducer } from './state/product.reducer';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { ProductEffects } from './state/product.effects';\r\n\r\nconst productRoutes: Routes = [\r\n  { path: '', component: ProductShellComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(productRoutes),\r\n    StoreModule.forFeature('products', reducer),\r\n    EffectsModule.forFeature(\r\n      [ ProductEffects ]\r\n    ),\r\n  ],\r\n  declarations: [\r\n    ProductShellComponent,\r\n    ProductListComponent,\r\n    ProductEditComponent\r\n  ]\r\n})\r\nexport class ProductModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductService {\r\n  private productsUrl = 'api/products';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.productsUrl)\r\n      .pipe(\r\n        tap(data => console.log(JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createProduct(product: Product): Observable<Product> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    // Product Id must be null for the Web API to assign an Id\r\n    const newProduct = { ...product, id: null };\r\n    return this.http.post<Product>(this.productsUrl, newProduct, { headers })\r\n      .pipe(\r\n        tap(data => console.log('createProduct: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteProduct(id: number): Observable<{}> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    const url = `${this.productsUrl}/${id}`;\r\n    return this.http.delete<Product>(url, { headers })\r\n      .pipe(\r\n        tap(data => console.log('deleteProduct: ' + id)),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateProduct(product: Product): Observable<Product> {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    const url = `${this.productsUrl}/${product.id}`;\r\n    return this.http.put<Product>(url, product, { headers })\r\n      .pipe(\r\n        tap(() => console.log('updateProduct: ' + product.id)),\r\n        // Return the product on an update\r\n        map(() => product),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(err) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage: string;\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\r\n    }\r\n    console.error(err);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n}\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromRoot from '../../state/app.state';\r\nimport * as fromProducts from './product.reducer';\r\n\r\n// Extends the app state to include the product feature.\r\n// This is required because products are lazy loaded.\r\n// So the reference to ProductState cannot be added to app.state.ts directly.\r\nexport interface State extends fromRoot.State {\r\n    products: fromProducts.ProductState;\r\n}\r\n\r\n// Selector functions\r\nconst getProductFeatureState = createFeatureSelector<fromProducts.ProductState>('products');\r\n\r\nexport const getShowProductCode = createSelector(\r\n    getProductFeatureState,\r\n    state => state.showProductCode\r\n);\r\n\r\nexport const getCurrentProductId = createSelector(\r\n    getProductFeatureState,\r\n    state => state.currentProductId\r\n);\r\n\r\nexport const getCurrentProduct = createSelector(\r\n    getProductFeatureState,\r\n    getCurrentProductId,\r\n    (state, currentProductId) => {\r\n        if (currentProductId === 0) {\r\n            return {\r\n                id: 0,\r\n                productName: '',\r\n                productCode: 'New',\r\n                description: '',\r\n                starRating: 0\r\n            };\r\n        } else {\r\n            return currentProductId ? state.products.find(p => p.id === currentProductId) : null;\r\n        }\r\n    }\r\n);\r\n\r\nexport const getProducts = createSelector(\r\n    getProductFeatureState,\r\n    state => state.products\r\n);\r\n\r\nexport const getError = createSelector(\r\n    getProductFeatureState,\r\n    state => state.error\r\n);\r\n","import { Product } from '../product';\r\n\r\n/* NgRx */\r\nimport { Action } from '@ngrx/store';\r\n\r\nexport enum ProductActionTypes {\r\n  ToggleProductCode = '[Product] Toggle Product Code',\r\n  SetCurrentProduct = '[Product] Set Current Product',\r\n  ClearCurrentProduct = '[Product] Clear Current Product',\r\n  InitializeCurrentProduct = '[Product] Initialize Current Product',\r\n  Load = '[Product] Load',\r\n  LoadSuccess = '[Product] Load Success',\r\n  LoadFail = '[Product] Load Fail',\r\n  UpdateProduct = '[Product] Update Product',\r\n  UpdateProductSuccess = '[Product] Update Product Success',\r\n  UpdateProductFail = '[Product] Update Product Fail',\r\n  CreateProduct = '[Product] Create Product',\r\n  CreateProductSuccess = '[Product] Create Product Success',\r\n  CreateProductFail = '[Product] Create Product Fail',\r\n  DeleteProduct = '[Product] Delete Product',\r\n  DeleteProductSuccess = '[Product] Delete Product Success',\r\n  DeleteProductFail = '[Product] Delete Product Fail'\r\n}\r\n\r\n// Action Creators\r\nexport class ToggleProductCode implements Action {\r\n  readonly type = ProductActionTypes.ToggleProductCode;\r\n\r\n  constructor(public payload: boolean) { }\r\n}\r\n\r\nexport class SetCurrentProduct implements Action {\r\n  readonly type = ProductActionTypes.SetCurrentProduct;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class ClearCurrentProduct implements Action {\r\n  readonly type = ProductActionTypes.ClearCurrentProduct;\r\n}\r\n\r\nexport class InitializeCurrentProduct implements Action {\r\n  readonly type = ProductActionTypes.InitializeCurrentProduct;\r\n}\r\n\r\nexport class Load implements Action {\r\n  readonly type = ProductActionTypes.Load;\r\n}\r\n\r\nexport class LoadSuccess implements Action {\r\n  readonly type = ProductActionTypes.LoadSuccess;\r\n\r\n  constructor(public payload: Product[]) { }\r\n}\r\n\r\nexport class LoadFail implements Action {\r\n  readonly type = ProductActionTypes.LoadFail;\r\n\r\n  constructor(public payload: string) { }\r\n}\r\n\r\nexport class UpdateProduct implements Action {\r\n  readonly type = ProductActionTypes.UpdateProduct;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class UpdateProductSuccess implements Action {\r\n  readonly type = ProductActionTypes.UpdateProductSuccess;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class UpdateProductFail implements Action {\r\n  readonly type = ProductActionTypes.UpdateProductFail;\r\n\r\n  constructor(public payload: string) { }\r\n}\r\n\r\nexport class CreateProduct implements Action {\r\n  readonly type = ProductActionTypes.CreateProduct;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class CreateProductSuccess implements Action {\r\n  readonly type = ProductActionTypes.CreateProductSuccess;\r\n\r\n  constructor(public payload: Product) { }\r\n}\r\n\r\nexport class CreateProductFail implements Action {\r\n  readonly type = ProductActionTypes.CreateProductFail;\r\n\r\n  constructor(public payload: string) { }\r\n}\r\n\r\nexport class DeleteProduct implements Action {\r\n  readonly type = ProductActionTypes.DeleteProduct;\r\n\r\n  constructor(public payload: number) { }\r\n}\r\n\r\nexport class DeleteProductSuccess implements Action {\r\n  readonly type = ProductActionTypes.DeleteProductSuccess;\r\n\r\n  constructor(public payload: number) { }\r\n}\r\n\r\nexport class DeleteProductFail implements Action {\r\n  readonly type = ProductActionTypes.DeleteProductFail;\r\n\r\n  constructor(public payload: string) { }\r\n}\r\n\r\n// Union the valid types\r\nexport type ProductActions = ToggleProductCode\r\n  | SetCurrentProduct\r\n  | ClearCurrentProduct\r\n  | InitializeCurrentProduct\r\n  | Load\r\n  | LoadSuccess\r\n  | LoadFail\r\n  | UpdateProduct\r\n  | UpdateProductSuccess\r\n  | UpdateProductFail\r\n  | CreateProduct\r\n  | CreateProductSuccess\r\n  | CreateProductFail\r\n  | DeleteProduct\r\n  | DeleteProductSuccess\r\n  | DeleteProductFail;\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap, map, catchError } from 'rxjs/operators';\r\n\r\nimport { ProductService } from '../product.service';\r\nimport { Product } from '../product';\r\n\r\n/* NgRx */\r\nimport { Action } from '@ngrx/store';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport * as productActions from './product.actions';\r\n\r\n@Injectable()\r\nexport class ProductEffects {\r\n\r\n  constructor(private productService: ProductService,\r\n              private actions$: Actions) { }\r\n\r\n  @Effect()\r\n  loadProducts$: Observable<Action> = this.actions$.pipe(\r\n    ofType(productActions.ProductActionTypes.Load),\r\n    mergeMap(action =>\r\n      this.productService.getProducts().pipe(\r\n        map(products => (new productActions.LoadSuccess(products))),\r\n        catchError(err => of(new productActions.LoadFail(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  updateProduct$: Observable<Action> = this.actions$.pipe(\r\n    ofType(productActions.ProductActionTypes.UpdateProduct),\r\n    map((action: productActions.UpdateProduct) => action.payload),\r\n    mergeMap((product: Product) =>\r\n      this.productService.updateProduct(product).pipe(\r\n        map(updatedProduct => (new productActions.UpdateProductSuccess(updatedProduct))),\r\n        catchError(err => of(new productActions.UpdateProductFail(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createProduct$: Observable<Action> = this.actions$.pipe(\r\n    ofType(productActions.ProductActionTypes.CreateProduct),\r\n    map((action: productActions.CreateProduct) => action.payload),\r\n    mergeMap((product: Product) =>\r\n      this.productService.createProduct(product).pipe(\r\n        map(newProduct => (new productActions.CreateProductSuccess(newProduct))),\r\n        catchError(err => of(new productActions.CreateProductFail(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  deleteProduct$: Observable<Action> = this.actions$.pipe(\r\n    ofType(productActions.ProductActionTypes.DeleteProduct),\r\n    map((action: productActions.DeleteProduct) => action.payload),\r\n    mergeMap((productId: number) =>\r\n      this.productService.deleteProduct(productId).pipe(\r\n        map(() => (new productActions.DeleteProductSuccess(productId))),\r\n        catchError(err => of(new productActions.DeleteProductFail(err)))\r\n      )\r\n    )\r\n  );\r\n}\r\n","import { Product } from '../product';\r\nimport { ProductActionTypes, ProductActions } from './product.actions';\r\n\r\n// State for this feature (Product)\r\nexport interface ProductState {\r\n  showProductCode: boolean;\r\n  currentProductId: number | null;\r\n  products: Product[];\r\n  error: string;\r\n}\r\n\r\nconst initialState: ProductState = {\r\n  showProductCode: true,\r\n  currentProductId: null,\r\n  products: [],\r\n  error: ''\r\n};\r\n\r\nexport function reducer(state = initialState, action: ProductActions): ProductState {\r\n\r\n  switch (action.type) {\r\n    case ProductActionTypes.ToggleProductCode:\r\n      return {\r\n        ...state,\r\n        showProductCode: action.payload\r\n      };\r\n\r\n    case ProductActionTypes.SetCurrentProduct:\r\n      return {\r\n        ...state,\r\n        currentProductId: action.payload.id\r\n      };\r\n\r\n    case ProductActionTypes.ClearCurrentProduct:\r\n      return {\r\n        ...state,\r\n        currentProductId: null\r\n      };\r\n\r\n    case ProductActionTypes.InitializeCurrentProduct:\r\n      return {\r\n        ...state,\r\n        currentProductId: 0\r\n      };\r\n\r\n    case ProductActionTypes.LoadSuccess:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n        error: ''\r\n      };\r\n\r\n    case ProductActionTypes.LoadFail:\r\n      return {\r\n        ...state,\r\n        products: [],\r\n        error: action.payload\r\n      };\r\n\r\n    case ProductActionTypes.UpdateProductSuccess:\r\n      const updatedProducts = state.products.map(\r\n        item => action.payload.id === item.id ? action.payload : item);\r\n      return {\r\n        ...state,\r\n        products: updatedProducts,\r\n        currentProductId: action.payload.id,\r\n        error: ''\r\n      };\r\n\r\n    case ProductActionTypes.UpdateProductFail:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    // After a create, the currentProduct is the new product.\r\n    case ProductActionTypes.CreateProductSuccess:\r\n      return {\r\n        ...state,\r\n        products: [...state.products, action.payload],\r\n        currentProductId: action.payload.id,\r\n        error: ''\r\n      };\r\n\r\n    case ProductActionTypes.CreateProductFail:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    // After a delete, the currentProduct is null.\r\n    case ProductActionTypes.DeleteProductSuccess:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(product => product.id !== action.payload),\r\n        currentProductId: null,\r\n        error: ''\r\n      };\r\n\r\n    case ProductActionTypes.DeleteProductFail:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// Generic validator for Reactive forms\r\n// Implemented as a class, not a service, so it can retain state for multiple forms.\r\nexport class GenericValidator {\r\n\r\n  // Provide the set of valid validation messages\r\n  // Stucture:\r\n  // controlName1: {\r\n  //     validationRuleName1: 'Validation Message.',\r\n  //     validationRuleName2: 'Validation Message.'\r\n  // },\r\n  // controlName2: {\r\n  //     validationRuleName1: 'Validation Message.',\r\n  //     validationRuleName2: 'Validation Message.'\r\n  // }\r\n  constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\r\n\r\n  }\r\n\r\n  // Processes each control within a FormGroup\r\n  // And returns a set of validation messages to display\r\n  // Structure\r\n  // controlName1: 'Validation Message.',\r\n  // controlName2: 'Validation Message.'\r\n  processMessages(container: FormGroup): { [key: string]: string } {\r\n    const messages = {};\r\n    for (const controlKey in container.controls) {\r\n      if (container.controls.hasOwnProperty(controlKey)) {\r\n        const c = container.controls[controlKey];\r\n        // If it is a FormGroup, process its child controls.\r\n        if (c instanceof FormGroup) {\r\n          const childMessages = this.processMessages(c);\r\n          Object.assign(messages, childMessages);\r\n        } else {\r\n          // Only validate if there are validation messages for the control\r\n          if (this.validationMessages[controlKey]) {\r\n            messages[controlKey] = '';\r\n            if ((c.dirty || c.touched) && c.errors) {\r\n              Object.keys(c.errors).map(messageKey => {\r\n                if (this.validationMessages[controlKey][messageKey]) {\r\n                  messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return messages;\r\n  }\r\n\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport class NumberValidators {\r\n\r\n    static range(min: number, max: number): ValidatorFn {\r\n        return (c: AbstractControl): { [key: string]: boolean } | null => {\r\n            if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\r\n                return { range: true };\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}